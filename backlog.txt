*********
SPRINT 1:
*********
Player Input:  TERENCE
	Player should be able to move around screen, jump, and (possibly) aim with the mouse.

Player physics: DONE?
	Player collides with level, player motion applied by physics engine

Level:  DONE
	Level built up out of farseer Body objects. Player collides against level. Level is rendered.

Abstract Drawing Code: DONE 
	Make ISpriteBatch, with methods Draw(.....), then make an XNASpriteBatch : ISpriteBatch, that just wraps SpriteBatch's Draw methods (the one we need for now) and takes a XNA SpriteBatch in its constructor. This way we can unit test all the IViews.

******************************
SPRINT 2: Started on 2/02/2009
******************************
DONE - 2 - As the player, when I move the camera follows me so I'm always at the centre of the screen
	Just calculates a simple transformation matrix (code already implemented). Needs to be given to every IView?

DONE - 2 - Client can move a crosshair around on the screen
3 - When I click the cursor position is written to the console.

DONE - 2 - Can exit from Main Menu
DONE - 1 - Can exit from Gameplay screen 
TERENCE - 2 - Resources (network sockets) properly disposed on exit 

As the client I can bring down the console and type in a command
DONE - 5 - Console fills half the screen with black, messages can be typed
ZAK - 5 - Read messages on console, and if valid, change the appropriate setting

Client types in a message and this message is shown on the screen of all clients connected to the server.
5 - Messages on console (i.e. not commands) are sent reliably to the server
3 - Server sends messages reliably to all clients
2 - Messages are written to the console


******************************COMMITED UP TO HERE FOR SPRINT 2 (32 story points)

20 - As the player, I can click on the screen and fire a railgun at the point where I click.
	Player clicks somewhere on screen and client sends fire event to Server - 5 - 
	Server calculates all hits and modifies all players that were hit - 3 -
	Server sends fire event to ALL clients to draw - 5 - 
	Server notifies all clients when a player has been "hit"; clients change colour of hit players - 5 -
	
40 - Games can be recorded and played back 
	STEP 1:
	We need to investigate what effect Farseer has on this... Apparently it's not deterministic. Way around this? Do player physics manually?
	STEP 2:
	Implementation: Records all input (what? network incoming messages and local input? (if client)). Records a periodic 'summary' of the game state.
	STEP 3:
	Run game simulation from recorded files (instead of live input). Confirm that the game state reaches the expected 'summary' states.

13 - As the client I can enter an IP address and port number to join a specific game.

8 - As the client, I can reconfigure my keys
8 - Write chat messages to the screen (not just in console)

40 - Item pickups
40 - Can load a level format
20 - Can load levels from menu
40 - Various level items (jump pads, teleporters, etc.)
40 - Can load arbitrarily shaped polygons from textures
40 - Player can use various techniques to move better/faster (trick jumping, strafe/circle jumping, wall/double jumping)
100 - Particle system
100 - Player character is animated
40 - Can search for sessions, see information on each one, and join one
100 - On the client, player movement, etc. is predicted to make the game seem smoother during online play
100 - Players earn experience and can use this experience to modify their appearance

CONTENT
Build +-5 levels
Build menu stage
